name: Run argocd-cli

on: 
  push:
  workflow_dispatch:

jobs:
  # azure-sql:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Azure login
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS_SQL }}

  #   - name: Azure CLI - scale up DB
  #     uses: azure/CLI@v1
  #     with:
  #       azcliversion: 2.26.0
  #       inlineScript: |
  #         az sql db create --resource-group aks-cluster-dev --server vc-dev-dbserver --name loadtest-platform_dev_separate_restored --service-objective S2

  # azure-vm:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Azure login
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS_VM }}

  #   - name: Azure CLI - start vm
  #     uses: azure/CLI@v1
  #     with:
  #       azcliversion: 2.26.0
  #       inlineScript: |
  #         az vm start --resource-group load-test_group --name load-test

  loadtest:
    # needs: [azure-sql, azure-vm]
    runs-on: ubuntu-latest
    name: loadtest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip- 
   
    - name: Install niet
      run: |
          pip install -r ${{ github.workspace }}/platform-dev/overlays/loadtest/requirements.txt
    
    - name: Get release tag
      run: |
        echo "PLATFORM_IMAGE_TAG=$(niet ".images[0].newTag" ${{ github.workspace }}/platform-dev/resources/kustomization.yaml)" >> $GITHUB_ENV
      
    - name: Echo
      run: |
        echo ${{ env.PLATFORM_IMAGE_TAG }}
        echo ${{ github.run_id }}
    # - name: App wait
    #   uses: ./vc-argocd-cli # Uses an action in the root directory
    #   id: argocd-cli
    #   with:
    #     server: cd.govirto.com
    #     username: ${{ secrets.ARGOCD_LOGIN }}
    #     password: ${{ secrets.ARGOCD_PASSWORD }}
    #     command: app wait error-page-s

    # - name: Run Loadtest
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: vcadmin
    #     password: ${{ secrets.PASSWORD }}
    #     command_timeout: 45m
    #     script: |
    #       cd loadtest
    #       export RELEASE_TAG='3.180'
    #       echo $RELEASE_TAG
    #       export TEST='./vc-benchmark/jmeter/xAPI/xApi_load_test_5_60_1800.jmx'
    #       export REPO='https://github.com/VirtoCommerce/vc-benchmark.git'
    #       export AUTH_TOKEN=${{ secrets.GH_TOKEN }}
    #       python3.8 loadtest.py && echo "finish"

  # Scaledown:
  #   needs: [azure-sql, azure-vm, loadtest]
  #   if: always()
  #   runs-on: ubuntu-latest
  #   name: Scaledown
  #   steps:
  #   - name: Azure login SQL
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS_SQL }}

  #   - name: Azure CLI - scale down DB
  #     uses: azure/CLI@v1
  #     with:
  #       azcliversion: 2.26.0
  #       inlineScript: |
  #         az sql db create --resource-group aks-cluster-dev --server vc-dev-dbserver --name loadtest-platform_dev_separate_restored --elastic-pool vc-dev-elasticpool
      
  #   - name: Azure login VM
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS_VM }}

  #   - name: Azure CLI - stop VM
  #     uses: azure/CLI@v1
  #     with:
  #       azcliversion: 2.26.0
  #       inlineScript: |
  #         az vm stop --resource-group load-test_group --name load-test